doctype html
html
  head
    link(rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css")
    style.
      .btn {
        min-width: 150px;
      }
      body {
        background-color: #eee;
        padding-top: 100px;
      }
      .form {
        background-color: #fff;
      }
    script(
      src="https://code.jquery.com/jquery-3.3.1.min.js"
      integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
      crossorigin="anonymous")
    script(src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.bundle.min.js")
    script.
      var ORIGIN = !{JSON.stringify(query.origin)};

      function showError(msg) {
        alert(msg);
      }

      function showSignUp() {
        $('#SignUp').show()
        $('#SignIn').hide()
      }

      function showSignIn() {
        $('#SignIn').show();
        $('#SignUp').hide();
      }

      function showAuthorization() {
        console.log('show', window.user._id);
        $('.username').text(window.user._id);
        $('#LogInCard').hide();
        $('#AuthorizationCard').show()
      }

      function showLogIn() {
        $('#LogInCard').show();
        $('#AuthorizationCard').hide()
      }

      function sendToken(token) {
        window.opener.postMessage(token, ORIGIN);
        window.close();
      }

      function deny() {
        window.opener.postMessage('', ORIGIN);
        window.close();
      }

      function sendRequest(method, url, callback) {
        var headers = {};
        if (window.user) {
          headers.Authorization = "Basic " + btoa(window.user.email + ':' + window.user.pass);
        }
        $.ajax({
          type: method,
          url: url,
          headers: headers,
          success: callback,
          error: function(req, textStatus, error) {
            var message = textStatus;
            try {
              message = JSON.parse(req.responseText).message || message;
            } catch (e) {}
            showError(message);
          },
        });
        return false;
      }

      function signIn() {
        window.user = {
          email: $('#SignIn input[name="email"]').val(),
          pass: $('#SignIn input[name="password"]').val(),
        }
        sendRequest('GET', '/users/me', function(data) {
          window.user._id = data._id;
          showAuthorization();
        });
        return false;
      }

      function signUp() {
        window.user = {
          email: $('#SignUp input[name="email"]').val(),
          pass: $('#SignUp input[name="password"]').val(),
        }
        var username = $('#SignUp input[name="username"]').val()
        var confirmPass = $('#SignUp input[name="confirmPassword"]').val();
        if (window.user.pass !== confirmPass) {
          showError("Passwords don't match");
        } else {
          sendRequest('POST', '/users/register/' + username, function(data) {
            window.user._id = data;
            showAuthorization();
          });
        }
        return false;
      }

      function authorize() {
        sendRequest('POST', '/users/authorize', function(data) {
          sendToken(data);
        });
        return false;
      }

      $(document).ready(function() {
        sendRequest('get', '/users/register', function(suggestedName) {
          let input = $('input[name="username"]');
          if (!input.val()) {
            input.val(suggestedName);
          }
        })
      });

  body
    mixin user-form(signUp=false)
      form(onsubmit= signUp ? 'return signUp()' : 'return signIn()')
        .form-group
          label Email Address
            if signUp
              small.help-text  - this will only be used to recover your account
          input.form-control(type="text" name="email")
        if signUp
          .form-group
            label Username
            input.form-control(type="text" name="username")
        .form-group
          label Password
          input.form-control(type="password" name="password")
        if signUp
          .form-group
            label Confirm Password
            input.form-control(type="password" name="confirmPassword")
        .form-group
          button.btn.btn-success(type="submit") #{signUp ? 'Sign up' : 'Sign in'}
    .container
      .row
        .col-12.col-md-6.offset-md-3
          #AuthorizationCard.card(style="display: none")
            .card-body
              h2.card-title #{query.originNoProtocol} would like your permission to:
            ul.list-group.list-group-flush
              li.list-group-item Read your data
              li.list-group-item Create new data
              li.list-group-item Modify your data
              li.list-group-item Delete your data
            .card-body
              .btn-toolbar
                a.btn.btn-lg.btn-success.mr-2(href="#" onclick="authorize()") Allow
                a.btn.btn-lg.btn-light(href="#" onclick="deny()") Deny
            .card-body
              p Signed in as <span class="username"></span>. 
                a(onclick="showLogIn()" href="#") Switch accounts
          #LogInCard.card
            .card-body
              h1.text-center Sign in with FreeDB
              p.
                <b>Lucky you!</b>  #{query.originNoProtocol} uses FreeDB,
                which means you will always own your data.
                Your data will be stored here at #{config.hostWithoutProtocol} - 
                you can come back here anytime to modify or delete your data.
              p
                a(href="FreeDB" target="_blank") Learn more
                span  about how FreeDB gives usesrs more control over their data.
              #SignIn
                h3 Sign in 
                  small
                    a(onclick="showSignUp()" href="#") or create a new account
                +user-form()
              #SignUp(style="display: none")
                h3 Sign up 
                  small
                    a(onclick="showSignIn()" href="#") or use an existing account
                +user-form(true)
