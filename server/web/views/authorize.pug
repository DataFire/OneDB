extends layout.pug
block head
    style.
      ul.scope-access-list {
        list-style: disc outside none;
      }

    script.
      var ORIGIN = !{JSON.stringify(query.origin)};
      var SCOPE_STRING = !{JSON.stringify(query.scope)}

      function showError(msg) {
        $('.alert.alert-danger').text(msg).css('opacity', 1);
      }

      function hideError() {
        $('.alert.alert-danger').css('opacity', 0);
      }

      function showLoading() {
        $('button.btn-success').attr('disabled', true);
        $('button.btn-success span').hide();
        $('button.btn-success i.fa').show();
      }

      function hideLoading() {
        $('button.btn-success').attr('disabled', false);
        $('button.btn-success span').show();
        $('button.btn-success i.fa').hide();
      }

      function showSignUp() {
        $('#SignUp').show()
        $('#SignIn').hide()
      }

      function showSignIn() {
        $('#SignIn').show();
        $('#SignUp').hide();
      }

      function showAuthorization() {
        console.log('show', window.user._id);
        $('.username').text(window.user._id);
        $('#LogInCard').hide();
        $('#AuthorizationCard').show()
      }

      function showLogIn() {
        $('#LogInCard').show();
        $('#AuthorizationCard').hide()
      }

      function sendToken(token) {
        window.opener.postMessage(token, ORIGIN);
        window.close();
      }

      function deny() {
        window.opener.postMessage('', ORIGIN);
        window.close();
      }

      function sendRequest(method, url, callback) {
        hideError();
        showLoading();
        var headers = {};
        if (window.user) {
          headers.Authorization = "Basic " + btoa(window.user.email + ':' + window.user.pass);
        }
        $.ajax({
          type: method,
          url: url,
          headers: headers,
          success: function(data) {
            hideLoading();
            callback(data);
          },
          error: function(req, textStatus, error) {
            hideLoading();
            var message = textStatus;
            try {
              message = JSON.parse(req.responseText).message || message;
            } catch (e) {}
            showError(message);
          },
        });
        return false;
      }

      function signIn() {
        window.user = {
          email: $('#SignIn input[name="email"]').val(),
          pass: $('#SignIn input[name="password"]').val(),
        }
        sendRequest('GET', '/users/me', function(data) {
          window.user._id = data._id;
          showAuthorization();
        });
        return false;
      }

      function signUp() {
        window.user = {
          email: $('#SignUp input[name="email"]').val(),
          pass: $('#SignUp input[name="password"]').val(),
        }
        var username = $('#SignUp input[name="username"]').val()
        var confirmPass = $('#SignUp input[name="confirmPassword"]').val();
        if (window.user.pass !== confirmPass) {
          showError("Passwords don't match");
        } else {
          sendRequest('POST', '/users/register/' + username, function(data) {
            window.user._id = data;
            showAuthorization();
          });
        }
        return false;
      }

      function authorize() {
        var url = '/users/authorize'
        if (SCOPE_STRING) {
          url += '?scope=' + SCOPE_STRING;
        }
        sendRequest('POST', url, function(data) {
          sendToken(data);
        });
        return false;
      }

      $(document).ready(function() {
        sendRequest('get', '/users/register', function(suggestedName) {
          let input = $('input[name="username"]');
          if (!input.val()) {
            input.val(suggestedName);
          }
        })
      });

block body
    mixin user-form(signUp=false)
      form(onsubmit= signUp ? 'return signUp()' : 'return signIn()')
        .form-group
          label Email Address
            if signUp
              small.help-text  - this will only be used to recover your account
          input.form-control(type="text" name="email")
        if signUp
          .form-group
            label Username
            input.form-control(type="text" name="username")
        .form-group
          label Password
          input.form-control(type="password" name="password")
        if signUp
          .form-group
            label Confirm Password
            input.form-control(type="password" name="confirmPassword")
        .form-group
          button.btn.btn-success(type="submit")
            i.fa.fa-spin.fa-refresh(style="display: none")
            span #{signUp ? 'Sign up' : 'Sign in'}
    .row
      .col-12.col-md-6.offset-md-3
        .alert.alert-danger(style="opacity: 0")
          span &nbsp;
        #AuthorizationCard.card(style="display: none")
          .card-body
            h4.card-title #{query.originNoProtocol} would like your permission to access the following spaces:
          if scopes
            ul.list-group.list-group-flush.with-scope
              each scopeSet, namespace in scopes
                li.list-group-item
                  h5 #{namespace}
                  ul.scope-access-list
                    each scope in scopeSet
                      li #{scope}
          else
            ul.list-group.list-group-flush.non-scope
              li.list-group-item
                span Read, Write, Create, and Destroy ALL your data in FreeDB
          .card-body
            .btn-toolbar
              a.btn.btn-lg.btn-success.mr-2(href="#" onclick="authorize()") Allow
              a.btn.btn-lg.btn-light(href="#" onclick="deny()") Deny
          .card-body
            p Signed in as <span class="username"></span>. 
              a(onclick="showLogIn()" href="#") Switch accounts
        #LogInCard.card
          .card-body
            h1.text-center Sign in with FreeDB
            p.
              <b>Lucky you!</b>  #{query.originNoProtocol} uses FreeDB,
              which means you will always own your data.
              Your data will be stored here at #{config.hostWithoutProtocol} - 
              you can come back here anytime to modify or delete your data.
            p
              a(href="FreeDB" target="_blank") Learn more
              span  about how FreeDB gives usesrs more control over their data.
            #SignIn
              h3 Sign in 
                small
                  a(onclick="showSignUp()" href="#") or create a new account
              +user-form()
            #SignUp(style="display: none")
              h3 Sign up 
                small
                  a(onclick="showSignIn()" href="#") or use an existing account
              +user-form(true)
