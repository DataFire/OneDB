extends layout.pug
block head
    style.
      ul.scope-access-list {
        list-style: disc outside none;
      }
      .toggle-scope-button {
        float: right;
        padding-top: 5px;
      }
      .fa-left {
        margin-right: 8px;
      }

    script.
      var ORIGIN = !{JSON.stringify(query.origin)};
      var SCOPE_STRING = !{JSON.stringify(query.scope)}

      function showError(msg) {
        $('.alert.alert-danger').text(msg).css('opacity', 1);
      }

      function hideError() {
        $('.alert.alert-danger').css('opacity', 0);
      }

      function showLoading() {
        $('button.btn-success').attr('disabled', true);
        $('button.btn-success span').hide();
        $('button.btn-success i.fa').show();
      }

      function hideLoading() {
        $('button.btn-success').attr('disabled', false);
        $('button.btn-success span').show();
        $('button.btn-success i.fa').hide();
      }

      var VIEWS = ['SignUp', 'SignIn', 'ForgotPassword'];
      function showView(name) {
        VIEWS.forEach(view => {
          if (view === name) $('#' + view).show();
          else $('#' + view).hide();
        })
      }

      function showAuthorization() {
        console.log('show', window.user.$.id);
        $('.username').text(window.user.$.id);
        $('#LogInCard').hide();
        $('#AuthorizationCard').show()
      }

      function showLogIn() {
        $('#LogInCard').show();
        $('#AuthorizationCard').hide()
      }

      function toggleScopePermissions(namespace) {
        console.log(namespace);
        var nsEl = $('#namespace_' + namespace)
        var listEl = nsEl.find('.scope-access-list');
        if (listEl.is(':hidden')) {
          listEl.show();
          nsEl.find('i.fa.fa-plus-square-o')
              .removeClass('fa-plus-square-o').addClass('fa-minus-square-o')
        } else {
          listEl.hide();
          nsEl.find('i.fa.fa-minus-square-o')
              .removeClass('fa-minus-square-o').addClass('fa-plus-square-o')
        }
      }

      function sendToken(token) {
        if (ORIGIN.startsWith('file:')) {
          window.opener.postMessage(token);
        } else {
          window.opener.postMessage(token, ORIGIN);
        }
        window.close();
      }

      function deny() {
        window.opener.postMessage('', ORIGIN);
        window.close();
      }

      function sendRequest(method, url, callback, ignoreErrors) {
        console.log('send', method, url, ignoreErrors);
        hideError();
        showLoading();
        var headers = {};
        if (window.user && window.user.email) {
          headers.Authorization = "Basic " + btoa(window.user.email + ':' + window.user.pass);
        } else if (window.user && window.user.token) {
          headers.Authorization = "Bearer " + window.user.token;
        }
        $.ajax({
          type: method,
          url: url,
          headers: headers,
          success: function(data) {
            hideLoading();
            callback(data);
          },
          error: function(req, textStatus, error) {
            hideLoading();
            if (ignoreErrors) return;
            var message = textStatus;
            try {
              message = JSON.parse(req.responseText).message || message;
            } catch (e) {}
            showError(message);
          },
        });
        return false;
      }

      function signIn(ignoreErrors) {
        window.user = window.user || {};
        window.user.email = $('#SignIn input[name="email"]').val();
        window.user.pass = $('#SignIn input[name="password"]').val();
        sendRequest('GET', '/users/me', function(data) {
          console.log('GOT', data);
          window.user.$ = data.$;
          sendRequest('POST', '/users/authorize', function(token) {
            window.user.token = token;
            if (window.localStorage) window.localStorage.setItem('token', token);
            showAuthorization();
          }, ignoreErrors);
        }, ignoreErrors);
        return false;
      }

      function signUp() {
        window.user = {
          email: $('#SignUp input[name="email"]').val(),
          pass: $('#SignUp input[name="password"]').val(),
        }
        var username = $('#SignUp input[name="username"]').val()
        var confirmPass = $('#SignUp input[name="confirmPassword"]').val();
        if (window.user.pass !== confirmPass) {
          showError("Passwords don't match");
        } else {
          sendRequest('POST', '/users/register/' + username, function(data) {
            window.user.$ = {id: data};
            sendRequest('POST', '/users/authorize', function(token) {
              window.user.token = token;
              if (window.localStorage) window.localStorage.setItem('token', token);
              showAuthorization();
            });
          });
        }
        return false;
      }

      function resetPassword() {
        var email = encodeURIComponent($('#ForgotPassword input[name="email"]').val());
        window.user = {};
        sendRequest('POST', '/users/start_reset_password?email=' + email, function(result) {
          $('#ForgotPassword .alert-success').show();
        });
        return false;
      }

      function authorize() {
        var url = '/users/authorize'
        if (SCOPE_STRING) {
          url += '?scope=' + SCOPE_STRING;
        }
        sendRequest('POST', url, function(data) {
          sendToken(data);
        });
        return false;
      }

      function restoreSession() {
        console.log('restore');
        if (!window.localStorage) return;
        var token = window.localStorage.getItem('token');
        console.log('restore', token);
        if (token) {
          window.user = window.user || {};
          window.user.token = token;
          signIn(true);
        }
      }

      $(document).ready(function() {
        restoreSession();
        sendRequest('get', '/users/register', function(suggestedName) {
          let input = $('input[name="username"]');
          if (!input.val()) {
            input.val(suggestedName);
          }
        })
      });

block body
    mixin user-form(signUp=false)
      form(onsubmit= signUp ? 'return signUp()' : 'return signIn()')
        .form-group
          label Email Address
            if signUp
              small.help-text  - this is private, and will only be used for login and account recovery
          input.form-control(type="text" name="email")
        if signUp
          .form-group
            label Username
            small.help-text  - this is public, and will be used to identify you to other users
            input.form-control(type="text" name="username")
        .form-group
          label Password
          input.form-control(type="password" name="password")
        if signUp
          .form-group
            label Confirm Password
            input.form-control(type="password" name="confirmPassword")
        .form-group
          button.btn.btn-success(type="submit")
            i.fa.fa-spin.fa-refresh(style="display: none")
            span #{signUp ? 'Sign up' : 'Sign in'}
    .row
      .col-12.col-md-6.offset-md-3
        .alert.alert-danger(style="opacity: 0")
          span &nbsp;
        #AuthorizationCard.card(style="display: none")
          .card-body
            h4.card-title #{query.originNoProtocol} would like your permission to access the following data.
            p.
              With OneDB, <b>you</b> own your data. If you'd like to use #{query.originNoProtocol},
              click "Allow" to give it permission to access your data. Otherwise, click "Deny" and we'll
              cancel the login process.
          if scopes
            ul.list-group.list-group-flush.with-scope
              each scopeSet, namespace in scopes
                li.list-group-item(id="namespace_" + namespace)
                  h5
                    span #{namespace}  
                    small.toggle-scope-button
                      a(onclick="toggleScopePermissions('" + namespace + "')" href="#")
                        i.fa.fa-left.fa-plus-square-o
                        span.toggle-scope-label Permissions
                  ul.scope-access-list(style="display: none")
                    each scope in scopeSet
                      li #{scope.replace('modify_acl', 'modify permissions')}
          else
            ul.list-group.list-group-flush.non-scope
              li.list-group-item
                span Read, Write, Create, and Delete ALL your data in OneDB
          .card-body
            .btn-toolbar
              a.btn.btn-lg.btn-success.mr-2(href="#" onclick="authorize()") Allow
              a.btn.btn-lg.btn-light(href="#" onclick="deny()") Deny
          .card-body
            p Signed in as <span class="username"></span>. 
              a(onclick="showLogIn()" href="#") Switch accounts
        #LogInCard.card
          .card-body
            h1.text-center Sign in with OneDB
            p.
              <b>Lucky you!</b>  #{query.originNoProtocol} uses OneDB,
              which means you will always own your data.
              Your data will be stored here at #{config.hostWithoutProtocol} - 
              you can come back here anytime to modify or delete your data.
            p
              a(href="https://one-db.org" target="_blank") Learn more
              span  about how OneDB gives users more control over their data.
            #SignIn
              h3 Sign in 
                small
                  a(onclick="showView('SignUp')" href="#") or create a new account
              +user-form()
              p
                a(onclick="showView('ForgotPassword')" href="#") Forgot your password?
            #SignUp(style="display: none")
              h3 Sign up 
                small
                  a(onclick="showView('SignIn')" href="#") or use an existing account
              +user-form(true)
            #ForgotPassword(style="display: none")
              h3 Reset your password 
                small
                  a(onclick="showView('SignIn')" href="#") or sign in
              p.
                Enter the email address you used to sign up, and we'll send you a link
                to reset your password. 
              form(onsubmit="return resetPassword()")
                .form-group
                  label Email Address
                  input.form-control(type="text" name="email")
                .form-group
                  button.btn.btn-success(type="submit")
                    i.fa.fa-spin.fa-refresh(style="display: none")
                    span Reset password
                .alert.alert-success(style="display: none")
                  span An email has been sent to the address above.

